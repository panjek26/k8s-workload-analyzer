apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grpc-health-ingress
  namespace: dev
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-private-dev
    kubernetes.io/ingress.class: "dev-nginx-ingres-private"
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/enable-http2: "true"
    nginx.ingress.kubernetes.io/grpc-backend: "true"
spec:
  tls:
  - hosts:
    - grpc-private.dev.bravo.bfi.co.id
    secretName: grpc-health-tls
  rules:
  - host: grpc-private.dev.bravo.bfi.co.id
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grpc-health
            port:
              number: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: grpc-health-ingress-public
  namespace: dev
  annotations:
    kubernetes.io/ingress.class: "nginx-ingress-protected"
    nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/enable-http2: "true"
    nginx.ingress.kubernetes.io/grpc-backend: "true"
spec:
  rules:
  - host: grpc.dev.bravo.bfi.co.id
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grpc-health
            port:
              number: 8080
